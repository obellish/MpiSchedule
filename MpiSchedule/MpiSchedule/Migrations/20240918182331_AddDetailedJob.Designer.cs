// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MpiSchedule.Data;

#nullable disable

namespace MpiSchedule.Migrations
{
    [DbContext(typeof(PressScheduleContext))]
    [Migration("20240918182331_AddDetailedJob")]
    partial class AddDetailedJob
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("MpiSchedule.Data.DetailedPressJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("PressJobId")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("PressJobId");

                    b.ToTable("DetailedJobs");
                });

            modelBuilder.Entity("MpiSchedule.Data.Press", b =>
                {
                    b.Property<int>("PressId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.HasKey("PressId");

                    b.HasIndex("PressId")
                        .IsUnique();

                    b.ToTable("Presses");

                    b.HasData(
                        new
                        {
                            PressId = 1,
                            Name = "FlatBed Melzer"
                        },
                        new
                        {
                            PressId = 2,
                            Name = "Rotary Melzer"
                        },
                        new
                        {
                            PressId = 3,
                            Name = "10\""
                        },
                        new
                        {
                            PressId = 4,
                            Name = "10Tam"
                        },
                        new
                        {
                            PressId = 5,
                            Name = "14\"Tamarack"
                        },
                        new
                        {
                            PressId = 6,
                            Name = "16\"Tamarack"
                        },
                        new
                        {
                            PressId = 7,
                            Name = "Test press"
                        });
                });

            modelBuilder.Entity("MpiSchedule.Data.PressJob", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PressId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("QuantityRan")
                        .HasColumnType("INTEGER");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<int>("Shift")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("PressId");

                    b.HasIndex("Id", "JobNumber")
                        .IsUnique();

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("MpiSchedule.Data.DetailedPressJob", b =>
                {
                    b.HasOne("MpiSchedule.Data.PressJob", "Job")
                        .WithMany()
                        .HasForeignKey("PressJobId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Job");
                });

            modelBuilder.Entity("MpiSchedule.Data.PressJob", b =>
                {
                    b.HasOne("MpiSchedule.Data.Press", "Press")
                        .WithMany("Jobs")
                        .HasForeignKey("PressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Press");
                });

            modelBuilder.Entity("MpiSchedule.Data.Press", b =>
                {
                    b.Navigation("Jobs");
                });
#pragma warning restore 612, 618
        }
    }
}
